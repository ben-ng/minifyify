{"version":3,"file":"bundle.js","sources":["../../node_modules/browserify/node_modules/browser-builtins/builtin/path.js","../../node_modules/browserify/node_modules/insert-module-globals/node_modules/process/browser.js","entry.js","submodule.js"],"names":["filter","xs","fn","res","i","length","push","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","process","require","splitPathRe","exports","resolve","resolvedPath","resolvedAbsolute","arguments","path","cwd","charAt","split","p","join","normalize","isAbsolute","trailingSlash","slice","paths","Array","prototype","call","dirname","dir","exec","isWindows","substring","basename","ext","f","substr","extname","relative","from","to","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","concat","sep","module","nextTick","canSetImmediate","window","setImmediate","canPost","postMessage","addEventListener","queue","ev","source","data","stopPropagation","shift","setTimeout","title","browser","env","argv","binding","Error","chdir","submodule","myString","createString","console","log","cb","buff","ii"],"mappings":"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","sourcesContent":["var process=require(\"__browserify_process\");function filter (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (fn(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length; i >= 0; i--) {\n    var last = parts[i];\n    if (last == '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Regex to split a filename into [*, dir, basename, ext]\n// posix version\nvar splitPathRe = /^(.+\\/(?!$)|\\/)?((?:.+?)?(\\.[^.]*)?)$/;\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\nvar resolvedPath = '',\n    resolvedAbsolute = false;\n\nfor (var i = arguments.length; i >= -1 && !resolvedAbsolute; i--) {\n  var path = (i >= 0)\n      ? arguments[i]\n      : process.cwd();\n\n  // Skip empty and invalid entries\n  if (typeof path !== 'string' || !path) {\n    continue;\n  }\n\n  resolvedPath = path + '/' + resolvedPath;\n  resolvedAbsolute = path.charAt(0) === '/';\n}\n\n// At this point the path should be resolved to a full absolute path, but\n// handle relative paths to be safe (might happen when process.cwd() fails)\n\n// Normalize the path\nresolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\nvar isAbsolute = path.charAt(0) === '/',\n    trailingSlash = path.slice(-1) === '/';\n\n// Normalize the path\npath = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n  \n  return (isAbsolute ? '/' : '') + path;\n};\n\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    return p && typeof p === 'string';\n  }).join('/'));\n};\n\n\nexports.dirname = function(path) {\n  var dir = splitPathRe.exec(path)[1] || '';\n  var isWindows = false;\n  if (!dir) {\n    // No dirname\n    return '.';\n  } else if (dir.length === 1 ||\n      (isWindows && dir.length <= 3 && dir.charAt(1) === ':')) {\n    // It is just a slash or a drive letter with a slash\n    return dir;\n  } else {\n    // It is a full dirname, strip trailing slash\n    return dir.substring(0, dir.length - 1);\n  }\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPathRe.exec(path)[2] || '';\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPathRe.exec(path)[3] || '';\n};\n\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\n","// shim for using process in browser\n\nvar process = module.exports = {};\n\nprocess.nextTick = (function () {\n    var canSetImmediate = typeof window !== 'undefined'\n    && window.setImmediate;\n    var canPost = typeof window !== 'undefined'\n    && window.postMessage && window.addEventListener\n    ;\n\n    if (canSetImmediate) {\n        return function (f) { return window.setImmediate(f) };\n    }\n\n    if (canPost) {\n        var queue = [];\n        window.addEventListener('message', function (ev) {\n            if (ev.source === window && ev.data === 'process-tick') {\n                ev.stopPropagation();\n                if (queue.length > 0) {\n                    var fn = queue.shift();\n                    fn();\n                }\n            }\n        }, true);\n\n        return function nextTick(fn) {\n            queue.push(fn);\n            window.postMessage('process-tick', '*');\n        };\n    }\n\n    return function nextTick(fn) {\n        setTimeout(fn, 0);\n    };\n})();\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n}\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\n","var submodule = require('./submodule')\n  , path = require('path')\n  , myString;\n\nmyString = submodule.createString(function () {\n  return path.join('highway','to','hell');\n});\n\nmyString = path.join(myString, 'stairway', 'to', 'heaven');\n\nconsole.log(myString);\n","var createString = function (cb) {\n  var buff = [];\n\n  for(var i=0, ii=3; i<ii; i++) {\n    buff.push(cb());\n  }\n\n  return buff.join();\n};\n\nmodule.exports = {\n  createString: createString\n};\n"]}